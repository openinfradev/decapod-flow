apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: create-application
  namespace: argo
spec:
  arguments:
    parameters:
    - name: site_name
      value: "hanu-deploy-apps"
    - name: manifest_repo_url
      value: "https://github.com/openinfradev/decapod-manifests"
    - name: revision
      value: "main"
    - name: app_prefix
      value: ""
  templates:
  - name: createApp
    inputs:
      parameters:
      - name: app_group
      - name: path
      - name: target_cluster  # set to site_name by default
      - name: namespace
    activeDeadlineSeconds: 900
    retryStrategy:
      limit: 3
      retryPolicy: "Always"
    container:
      name: 'create'
      image: harbor.taco-cat.xyz/tks/argocd-cli:v2.2.5
      imagePullPolicy: IfNotPresent
      command:
      - /bin/bash
      - -cx
      - |
        # log into Argo CD server
        ./argocd login $ARGO_SERVER --plaintext --insecure --username $ARGO_USERNAME \
        --password $ARGO_PASSWORD

        TARGET_CLUSTER="{{workflow.parameters.site_name}}"
        if [[ -n "{{inputs.parameters.target_cluster}}" ]]; then
          TARGET_CLUSTER="{{inputs.parameters.target_cluster}}"
        fi

        # TODO: another option is to set default app_prefix to 'site_name' and always apply that prefix.
        ARGOCD_APP_NAME=$PATH
        ARGOCD_APP_LABEL=$APP_GROUP
        if [[ -n "{{workflow.parameters.app_prefix}}" ]]; then
          ARGOCD_APP_NAME="{{workflow.parameters.app_prefix}}-$PATH"
          ARGOCD_APP_LABEL="{{workflow.parameters.app_prefix}}-$APP_GROUP"
        fi

        # check if the argocd app already exists.
        ./argocd app get $ARGOCD_APP_NAME
        if [[ $? -ne 0 ]]; then
          GIT_SVC_HTTP=${GIT_SVC_URL%://*}
          GIT_SVC_BASE_URL=${GIT_SVC_URL#*//}
          REPO="$GIT_SVC_HTTP://$GIT_SVC_BASE_URL/$USERNAME/$SITE_NAME-manifests"

          # create new application if it doesn't exist.
          ./argocd app create $ARGOCD_APP_NAME --repo $REPO --revision $REVISION --path $SITE_NAME/$APP_GROUP/$PATH --dest-namespace $NAMESPACE --dest-name $TARGET_CLUSTER --project $APP_GROUP --label app=$ARGOCD_APP_LABEL --directory-recurse
        fi

        # For crds-only app, set sync-option to 'replace'
        if [[ $ARGOCD_APP_NAME == *crds ]]; then
          ./argocd app set $ARGOCD_APP_NAME --sync-policy automated --auto-prune --sync-option CreateNamespace=true --sync-option Replace=true
        else
          ./argocd app set $ARGOCD_APP_NAME --sync-policy automated --auto-prune --sync-option CreateNamespace=true
        fi
        ./argocd app sync $ARGOCD_APP_NAME --async
        ./argocd app wait $ARGOCD_APP_NAME --health
      envFrom:
        - secretRef:
            name: "decapod-argocd-config"
        - secretRef:
            name: "git-svc-token"
      env:
        - name: SITE_NAME
          value: "{{workflow.parameters.site_name}}"
        - name: REVISION
          value: "{{workflow.parameters.revision}}"
        - name: APP_GROUP
          value: "{{inputs.parameters.app_group}}"
        - name: PATH
          value: "{{inputs.parameters.path}}"
        - name: NAMESPACE
          value: "{{inputs.parameters.namespace}}"

  - name: installApps
    inputs:
      parameters:
      - name: list
    steps:
    - - name: "InstallApps"
        template: createApp
        arguments:
          parameters:
          - {name: app_group, value: "{{item.app_group}}"}
          - {name: path, value: "{{item.path}}"}
          - {name: namespace, value: "{{item.namespace}}"}
          - {name: target_cluster, value: "{{item.target_cluster}}"}
        withParam: "{{inputs.parameters.list}}"
